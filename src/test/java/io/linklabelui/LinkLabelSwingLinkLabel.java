/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.linklabelui;

import io.linklabelui.model.LinkLabel;
import io.linklabelui.view.LinkLabelUI;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;

/**
 * @author https://github.com/vincenzopalazzo
 */
public class LinkLabelSwingLinkLabel extends JPanel {

    protected LinkLabel linkToVincentGithub;
    protected LinkLabel linkToMaterialTheme;
    protected LinkLabel linkToMaterialToast;
    protected LinkLabel linkToDonation;

    protected MouseListener followingLink;

    public LinkLabelSwingLinkLabel() {
        intView();
    }

    protected void intView() {
        initComponent();
        initAction();

        setVisible(true);
    }

    private void initComponent() {
        linkToVincentGithub = new LinkLabel("Author library @vincenzopalazzo", "https://github.com/vincenzopalazzo");
        linkToMaterialTheme = new LinkLabel("Go to material-ui-swing project", "https://github.com/vincenzopalazzo/material-ui-swing");
        linkToMaterialToast = new LinkLabel("Go to toast project", "https://github.com/vincenzopalazzo/toasts-for-swing");
        linkToDonation = new LinkLabel("Support this project", "https://github.com/sponsors/vincenzopalazzo");

        super.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        super.add(Box.createRigidArea(new Dimension(5, 15)));
        super.add(linkToVincentGithub);
        super.add(Box.createRigidArea(new Dimension(5, 15)));

        super.add(linkToMaterialTheme);
        super.add(Box.createRigidArea(new Dimension(5, 15)));

        super.add(linkToMaterialToast);
        super.add(Box.createRigidArea(new Dimension(5, 15)));

        super.add(linkToDonation);
        super.add(Box.createRigidArea(new Dimension(5, 15)));
    }

    private void initAction() {
        followingLink = new ActionFollowingLink();
        linkToVincentGithub.addMouseListener(followingLink);
        linkToMaterialTheme.addMouseListener(followingLink);
        linkToMaterialToast.addMouseListener(followingLink);
        linkToDonation.addMouseListener(followingLink);
    }

    private class ActionFollowingLink implements MouseListener {

        @Override
        public void mouseClicked(MouseEvent e) {
            try {
                JComponent component = (JComponent) e.getSource();
                if (component instanceof LinkLabel) {
                    LinkLabel link = (LinkLabel) component;
                    Desktop.getDesktop().browse(new URI(link.getUrl()));
                }
            } catch (IOException | URISyntaxException e1) {
                e1.printStackTrace();
            }
        }

        @Override
        public void mousePressed(MouseEvent e) { }

        @Override
        public void mouseReleased(MouseEvent e) { }

        @Override
        public void mouseEntered(MouseEvent e) { }

        @Override
        public void mouseExited(MouseEvent e) { }
    }

}
